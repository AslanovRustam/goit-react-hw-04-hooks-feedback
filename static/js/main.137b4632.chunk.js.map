{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","app.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","getNameOfItem","namesOfItems","Object","keys","className","s","list","map","item","onClick","button","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","feedback","values","reduce","acc","classname","mainContainer","Error","name","slice","toUpperCase","toLowerCase","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mQAIe,SAASA,EAAT,GAIX,IAHFC,EAGC,EAHDA,QACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,cAEMC,EAAeC,OAAOC,KAAKL,GAEjC,OACE,oBAAIM,UAAWC,IAAEC,KAAjB,SACGL,EAAaM,KAAI,SAAAC,GAAI,OACpB,6BACE,yBAAQC,QAAS,kBAAMV,EAAgBS,IAAOJ,UAAWC,IAAEK,OAA3D,UACGV,EAAcQ,GAAO,QAFjBA,QCZjB,IA0BeG,EA1BI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,mBACAC,EALiB,EAKjBA,gCALiB,OAOjB,gCACE,uCACQ,+BAAOJ,OAEf,0CACW,+BAAOC,OAElB,sCACO,+BAAOC,OAEd,wCACS,+BAAOC,OAEhB,oDACqB,iCAAOC,EAAP,cCdVC,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCAQC,MAJf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCOE,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBX,EADqB,KACfY,EADe,OAEED,mBAAS,GAFX,mBAErBV,EAFqB,KAEZY,EAFY,OAGNF,mBAAS,GAHH,mBAGrBT,EAHqB,KAGhBY,EAHgB,KAKtBC,EAAW,CAAEf,OAAMC,UAASC,OAsB5BC,EAAqB,WACzB,OAAOb,OAAO0B,OAAOD,GAAUE,QAAO,SAACC,EAAKtB,GAAN,OAAesB,EAAMtB,IAAM,IAMnE,OACE,sBAAKuB,UAAW1B,IAAE2B,cAAlB,UACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAACrB,EAAD,CACEC,QAAS6B,EACT5B,gBAhCc,SAAAS,GACpB,OAAQA,GACN,IAAK,OACH,OAAOgB,EAAQZ,EAAO,GAExB,IAAK,UACH,OAAOa,EAAWZ,EAAU,GAE9B,IAAK,MACH,OAAOa,EAAOZ,EAAM,GAEtB,QACE,MAAM,IAAImB,MAAM,2BAqBdjC,cAjBc,SAAAkC,GACpB,MAAM,GAAN,OAAUA,EAAKC,MAAM,EAAG,GAAGC,eAA3B,OAA2CF,EAAKC,MAAM,GAAGE,oBAmBvD,cAAC,EAAD,CAASnB,MAAM,aAAf,SAC4B,IAAzBH,IACC,cAAC,EAAD,CAAcM,QAAQ,sBAEtB,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,mBAAoBA,IACpBC,gCApBDsB,KAAKC,MAAc,IAAP3B,EAAcG,YClCrCyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpB,EAAD,MAEFqB,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,kBCAhED,EAAOC,QAAU,CAAC,cAAgB,8B","file":"static/js/main.137b4632.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({\r\n  options,\r\n  onLeaveFeedback,\r\n  getNameOfItem,\r\n}) {\r\n  const namesOfItems = Object.keys(options);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {namesOfItems.map(item => (\r\n        <li key={item}>\r\n          <button onClick={() => onLeaveFeedback(item)} className={s.button}>\r\n            {getNameOfItem(item)}{' '}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  getNameOfItem: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n}) => (\r\n  <div>\r\n    <p>\r\n      Good: <span>{good}</span>\r\n    </p>\r\n    <p>\r\n      Neutral: <span>{neutral}</span>\r\n    </p>\r\n    <p>\r\n      Bad: <span>{bad}</span>\r\n    </p>\r\n    <p>\r\n      Total: <span>{countTotalFeedback}</span>\r\n    </p>\r\n    <p>\r\n      Positive Feedback: <span>{countPositiveFeedbackPercentage}%</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\r\n// import MarkList from './components/Marks/Marks';\r\nimport s from './app.module.css';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Section from './components/Section/Section';\r\nimport Notification from './components/Notification/Notification';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const feedback = { good, neutral, bad };\r\n\r\n  const setActiveItem = item => {\r\n    switch (item) {\r\n      case 'good':\r\n        return setGood(good + 1);\r\n\r\n      case 'neutral':\r\n        return setNeutral(neutral + 1);\r\n\r\n      case 'bad':\r\n        return setBad(bad + 1);\r\n\r\n      default:\r\n        throw new Error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const getNameOfItem = name => {\r\n    return `${name.slice(0, 1).toUpperCase()}${name.slice(1).toLowerCase()}`;\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return Object.values(feedback).reduce((acc, item) => acc + item, 0);\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return Math.round((good * 100) / countTotalFeedback());\r\n  };\r\n  return (\r\n    <div classname={s.mainContainer}>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={feedback}\r\n          onLeaveFeedback={setActiveItem}\r\n          getNameOfItem={getNameOfItem}\r\n        />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() === 0 ? (\r\n          <Notification message=\"No feedback given\"></Notification>\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            countTotalFeedback={countTotalFeedback()}\r\n            countPositiveFeedbackPercentage={countPositiveFeedbackPercentage()}\r\n          />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__11-U9\",\"button\":\"FeedbackOptions_button__2qS-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"app_mainContainer__3x-O7\"};"],"sourceRoot":""}